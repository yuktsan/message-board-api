# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: message-board
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-2
# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
      Resource:
        - arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.dynamodb.users}
        - arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.dynamodb.users}/index/pk
        - arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.dynamodb.messageBoards}
        - arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.dynamodb.messageBoards}/index/pk


# you can define service wide environment variables here
  environment:
    DYNAMODB_MESSAGE_BOARD_USERS_TABLE: ${self:custom.dynamodb.users}
    DYNAMODB_MESSAGE_BOARD_TABLE: ${self:custom.dynamodb.messageBoards}

functions:
  createUser:
    handler: src/functions/createUser.createUser
    description: Create a new user
    events:
      - http:
          method: post
          cors: true
          path: /v1/users
  getUsers:
    handler: src/functions/getUsers.getUsers
    description: List all users
    events:
      - http:
          method: get
          cors: true
          path: /v1/users
  getUserBoards:
    handler: src/functions/getUserBoards.getUserBoards
    events:
      - http:
          method: get
          cors: true
          path: /v1/users/{userId}/boards
  getUserMessages:
    handler: src/functions/getUserMessages.getUserMessages
    events:
      - http:
          method: post
          cors: true
          path: /v1/users/{userId}/messages
  createMessageBoard:
    handler: src/functions/createMessageBoard.createMessageBoard
    events:
      - http:
          method: post
          cors: true
          path: /v1/message-boards

# you can define service wide environment variables here
plugins:
  - serverless-pseudo-parameters
  - serverless-mocha
custom:
  dynamodb:
    users: users-${self:provider.stage}
    messageBoards: message-boards-${self:provider.stage}
resources:
  Resources:
    users:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dynamodb.users}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    messageBoards:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dynamodb.messageBoards}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST